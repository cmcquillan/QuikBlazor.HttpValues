@page "/awaitable-value/{id}"

<section>
    <a href="/awaitable-value/1">1</a>
    <a href="/awaitable-value/2">2</a>
</section>

<section>
    <HttpValue TValue="Cake"
               @ref="httpValue"
               Url="https://localhost:7077/cakes/{cakeId}"
               cakeId="@CakeId">
    </HttpValue>

    <p>
        Id: @Cake?.Id<br />
        Name: @Cake?.Name<br />
        Origin: @Cake?.Origin<br />
        Description: @Cake?.Description<br />
    </p>
</section>

@code {
    private HttpValue<Cake>? httpValue;

    [Parameter]
    public string? Id { get; set; }

    public string? CakeId { get; set; }

    public Cake? Cake { get; set; }

    protected override void OnParametersSet()
    {
        CakeId = Id;
    }

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (httpValue is not null)
        {
            var cake = await httpValue;
            if (cake != Cake)
            {
                Cake = cake;
                StateHasChanged();
            }
        }
    }
}
